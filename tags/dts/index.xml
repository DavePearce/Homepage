<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dts on Dave's Homepage</title><link>https://whileydave.com/tags/dts/</link><description>Recent content in dts on Dave's Homepage</description><generator>Hugo -- gohugo.io</generator><language>en-nz</language><lastBuildDate>Fri, 01 Jan 2010 00:00:00 +0000</lastBuildDate><atom:link href="https://whileydave.com/tags/dts/index.xml" rel="self" type="application/rss+xml"/><item><title>A Batch Algorithm for Maintaining a Topological Order</title><link>https://whileydave.com/publications/pk10_acsc/</link><pubDate>Fri, 01 Jan 2010 00:00:00 +0000</pubDate><guid>https://whileydave.com/publications/pk10_acsc/</guid><description>Abstract: The dynamic topological order problem is that of efficiently updating a topological order after some edge(s) are inserted into a graph. Much prior work exists on the unit-change version of this problem, where the order is updated after every single insertion.</description></item><item><title>A Dynamic Topological Sort Algorithm for Directed Acyclic Graphs</title><link>https://whileydave.com/publications/pk07_jea/</link><pubDate>Mon, 01 Jan 2007 00:00:00 +0000</pubDate><guid>https://whileydave.com/publications/pk07_jea/</guid><description>Abstract. We consider the problem of maintaining the topological order of a directed acyclic graph (DAG) in the presence of edge insertions and deletions. We present a new algorithm and, although this has inferior time complexity compared with the best previously known result, we find that its simplicity leads to better performance in practice.</description></item><item><title>Version 1.0</title><link>https://whileydave.com/downloads/dtsv061205/</link><pubDate>Thu, 06 Oct 2005 00:00:00 +0000</pubDate><guid>https://whileydave.com/downloads/dtsv061205/</guid><description/></item><item><title>Version 0.8</title><link>https://whileydave.com/downloads/dtsv260105/</link><pubDate>Wed, 26 Jan 2005 00:00:00 +0000</pubDate><guid>https://whileydave.com/downloads/dtsv260105/</guid><description/></item><item><title>Some directed graph algorithms and their application to pointer analysis.</title><link>https://whileydave.com/publications/pearce05_phd/</link><pubDate>Sat, 01 Jan 2005 00:00:00 +0000</pubDate><guid>https://whileydave.com/publications/pearce05_phd/</guid><description>Abstract: This thesis is focused on improving execution time and precision of scalable pointer analysis. Such an analysis statically determines the targets of all pointer variables in a program. We formulate the analysis as a directed graph problem, where the solution can be obtained by a computation similar, in many ways, to transitive closure.</description></item><item><title>A Dynamic Algorithm for Topologically Sorting Directed Acyclic Graphs</title><link>https://whileydave.com/publications/pk04_wea/</link><pubDate>Thu, 01 Jan 2004 00:00:00 +0000</pubDate><guid>https://whileydave.com/publications/pk04_wea/</guid><description>Abstract: We consider how to maintain the topological order of a directed acyclic graph (DAG) in the presence of edge insertions and deletions. We present a new algorithm and, although this has marginally inferior time complexity compared with the best previously known result, we find that its simplicity leads to better performance in practice.</description></item><item><title>Dynamic Topological Sort</title><link>https://whileydave.com/projects/dts/</link><pubDate>Thu, 01 Jan 2004 00:00:00 +0000</pubDate><guid>https://whileydave.com/projects/dts/</guid><description>The problem of topologically sorting a directed graph is about arranging its nodes so that all edges go in the same direction. For example, consider the following directed graph:
A topological sort of this graph is:</description></item><item><title>Version 0.5</title><link>https://whileydave.com/downloads/dtsv270803/</link><pubDate>Wed, 27 Aug 2003 00:00:00 +0000</pubDate><guid>https://whileydave.com/downloads/dtsv270803/</guid><description/></item></channel></rss>
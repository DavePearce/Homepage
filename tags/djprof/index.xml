<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>djprof on Dave's Homepage</title><link>https://whileydave.com/tags/djprof/</link><description>Recent content in djprof on Dave's Homepage</description><generator>Hugo -- gohugo.io</generator><language>en-nz</language><lastBuildDate>Mon, 01 Jan 2007 00:00:00 +0000</lastBuildDate><atom:link href="https://whileydave.com/tags/djprof/index.xml" rel="self" type="application/rss+xml"/><item><title>Profiling with AspectJ</title><link>https://whileydave.com/publications/pwbk07_spe/</link><pubDate>Mon, 01 Jan 2007 00:00:00 +0000</pubDate><guid>https://whileydave.com/publications/pwbk07_spe/</guid><description>Abstract. This paper investigates whether AspectJ can be used for efficient profiling of Java programs. Profiling differs from other applications of AOP (e.g. tracing), since it necessitates efficient and often complex interactions with the target program.</description></item><item><title>DJProf</title><link>https://whileydave.com/projects/djprof/</link><pubDate>Wed, 01 Jan 2003 00:00:00 +0000</pubDate><guid>https://whileydave.com/projects/djprof/</guid><description>DJProf is an experimental Java profiling tool which employs AspectJ to insert the necessary instrumentation for profiling rather than, for example, the Java Machine Profiler Interface (JVMPI). DJProf can be used to profile Java programs without modification (i.</description></item></channel></rss>